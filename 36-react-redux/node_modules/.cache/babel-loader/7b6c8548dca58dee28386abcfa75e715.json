{"ast":null,"code":"var _jsxFileName = \"/Users/nheinrich/Desktop/my-mod-1-starters/chicago-web-career-040119/36-react-redux/src/PaintingList.js\";\nimport React, { Component } from \"react\";\nimport PaintingCard from \"./PaintingCard.js\";\nimport SearchBar from \"./SearchBar\";\nimport { connect } from \"react-redux\";\n\nclass PaintingList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.filterPaintings = () => {\n      return this.props.paintings.filter(painting => painting.title.toLowerCase().includes(this.state.searchInput.toLowerCase()));\n    };\n  }\n\n  // upvote = artId => {\n  //   let paintingIndex = this.state.paintings.findIndex(painting => painting.id === artId)\n  //   let newState = [...this.state.paintings]\n  //   newState[paintingIndex].votes += 1\n  //   this.setState(newState)\n  // }\n  render() {\n    const renderAllPaintings = this.props.paintings.map(painting => {\n      return React.createElement(PaintingCard, {\n        title: painting.title,\n        artistName: painting.artist.name,\n        image: painting.image,\n        votes: painting.votes,\n        id: painting.id,\n        key: painting.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    });\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), renderAllPaintings);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    paintings: state.paintings,\n    searchInput: state.searchInput\n  };\n};\n\nexport default connect(mapStateToProps)(PaintingList);","map":{"version":3,"sources":["/Users/nheinrich/Desktop/my-mod-1-starters/chicago-web-career-040119/36-react-redux/src/PaintingList.js"],"names":["React","Component","PaintingCard","SearchBar","connect","PaintingList","filterPaintings","props","paintings","filter","painting","title","toLowerCase","includes","state","searchInput","render","renderAllPaintings","map","artist","name","image","votes","id","console","log","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AACA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAUnCK,eAVmC,GAUjB,MAAM;AACtB,aAAO,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,MAArB,CAA4BC,QAAQ,IAAIA,QAAQ,CAACC,KAAT,CAAeC,WAAf,GAA6BC,QAA7B,CAAsC,KAAKC,KAAL,CAAWC,WAAX,CAAuBH,WAAvB,EAAtC,CAAxC,CAAP;AACD,KAZkC;AAAA;;AAcnC;AACA;AACA;AACA;AACA;AACA;AAEAI,EAAAA,MAAM,GAAE;AAEN,UAAMC,kBAAkB,GAAG,KAAKV,KAAL,CAAWC,SAAX,CAAqBU,GAArB,CAAyBR,QAAQ,IAAI;AAC9D,aAAO,oBAAC,YAAD;AACP,QAAA,KAAK,EAAEA,QAAQ,CAACC,KADT;AAEP,QAAA,UAAU,EAAED,QAAQ,CAACS,MAAT,CAAgBC,IAFrB;AAGP,QAAA,KAAK,EAAEV,QAAQ,CAACW,KAHT;AAIP,QAAA,KAAK,EAAEX,QAAQ,CAACY,KAJT;AAKP,QAAA,EAAE,EAAEZ,QAAQ,CAACa,EALN;AAMP,QAAA,GAAG,EAAEb,QAAQ,CAACa,EANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAQD,KAT0B,CAA3B;AAUAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGU,kBAFH,CADF;AAMD;;AAxCkC;;AA2CrC,MAAMS,eAAe,GAAGZ,KAAK,IAAI;AAC/B,SAAO;AACLN,IAAAA,SAAS,EAAEM,KAAK,CAACN,SADZ;AAELO,IAAAA,WAAW,EAAED,KAAK,CAACC;AAFd,GAAP;AAID,CALD;;AAOA,eAAeX,OAAO,CAACsB,eAAD,CAAP,CAAyBrB,YAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\"\nimport PaintingCard from \"./PaintingCard.js\"\nimport SearchBar from \"./SearchBar\"\nimport {connect} from \"react-redux\"\nclass PaintingList extends Component {\n\n\n\n  // onChangeInput = input => {\n  //   this.setState({\n  //     searchInput: input\n  //   })\n  // }\n\n  filterPaintings = () => {\n    return this.props.paintings.filter(painting => painting.title.toLowerCase().includes(this.state.searchInput.toLowerCase()))\n  }\n\n  // upvote = artId => {\n  //   let paintingIndex = this.state.paintings.findIndex(painting => painting.id === artId)\n  //   let newState = [...this.state.paintings]\n  //   newState[paintingIndex].votes += 1\n  //   this.setState(newState)\n  // }\n\n  render(){\n\n    const renderAllPaintings = this.props.paintings.map(painting => {\n      return <PaintingCard\n      title={painting.title}\n      artistName={painting.artist.name}\n      image={painting.image}\n      votes={painting.votes}\n      id={painting.id}\n      key={painting.id}\n      />\n    })\n    console.log(this.props)\n    return(\n      <div>\n        <SearchBar />\n        {renderAllPaintings}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    paintings: state.paintings,\n    searchInput: state.searchInput\n  }\n}\n\nexport default connect(mapStateToProps)(PaintingList)\n"]},"metadata":{},"sourceType":"module"}